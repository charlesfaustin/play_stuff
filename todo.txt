current setup blocks whilst file is created. not good.
so we are gonna hand it off to an actor for background processing

*make url to download created file
*url takes uuid argument
*the file is searched for with that uuid string by the idstring field
*then the file is returned to the user


*then do akka-based file creation
*firstly, make a url to a controller actor that send a helloworld message to an actor
* then take the logic from the ownfilename controller to create the new file
* then create polling websocket to show all created files instead of the static js i wrote
* will prolly have to use setinterval
* each update, will prolly clear the objects in browser and reload them along with any new ones, as im not keeping info
  about the dates theses files were created.. yet

********* for later ********
dragula stuff to change the order



********* for later ********
*then later, push based websocket, to push newly created files to browser, if they were made after the page loaded.
*will require added a date created to the objects, and a date initialised to the controller actor/whatever
*will prolly use a scheduled action thing to query the db and do the pushing
*obv this is only done if the websocket connection is still open
*will have to install jodaTime at this point

********* for later ********
*template can then do a similar jav
ascript json thing to show the created files available for download
*maybe do a notification with a websocket so the page doesnt have to be reloaded 